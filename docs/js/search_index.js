var search_data = {"index":{"searchIndex":["alimento","dieta","gema","error","listadobleenlazada","object","plato","comparemode","platoeficienciaenergetica","<=>()","<=>()","alimentos()","build()","calculoemisiones()","cantidadnecesaria()","carbohidratos()","constructhashfromfile()","constructlistfromfile()","copy()","each()","emisiones()","extract_head()","extract_tail()","extracted()","extracted()","extracted()","gei()","huellanutricional()","insert()","insertlist()","inserted()","inserted()","inserted()","lipidos()","new()","new()","new()","new()","proteinas()","setcantidad()","setcantidad()","setcarbohidratos()","setcomparemode()","setgei()","setlipidos()","setnombre()","setproteinas()","setterreno()","terreno()","terreno()","to_s()","to_s()","to_s()","to_s()","valorenergetico()","changelog","gemfile","gemfile.lock","guardfile","readme","rakefile","setup","prct06-tdd.gemspec"],"longSearchIndex":["alimento","dieta","gema","gema::error","listadobleenlazada","object","plato","plato::comparemode","platoeficienciaenergetica","alimento#<=>()","plato#<=>()","dieta::alimentos()","alimento::build()","dieta#calculoemisiones()","alimento#cantidadnecesaria()","alimento#carbohidratos()","alimento::constructhashfromfile()","alimento::constructlistfromfile()","alimento::copy()","listadobleenlazada#each()","dieta#emisiones()","listadobleenlazada#extract_head()","listadobleenlazada#extract_tail()","listadobleenlazada#extracted()","plato#extracted()","platoeficienciaenergetica#extracted()","alimento#gei()","plato#huellanutricional()","listadobleenlazada#insert()","listadobleenlazada#insertlist()","listadobleenlazada#inserted()","plato#inserted()","platoeficienciaenergetica#inserted()","alimento#lipidos()","alimento::new()","listadobleenlazada::new()","plato::new()","platoeficienciaenergetica::new()","alimento#proteinas()","alimento::setcantidad()","alimento#setcantidad()","alimento::setcarbohidratos()","plato::setcomparemode()","alimento::setgei()","alimento::setlipidos()","alimento::setnombre()","alimento::setproteinas()","alimento::setterreno()","alimento#terreno()","dieta#terreno()","alimento#to_s()","listadobleenlazada#to_s()","plato#to_s()","platoeficienciaenergetica#to_s()","alimento#valorenergetico()","","","","","","","",""],"info":[["Alimento","","Alimento.html","","<p>Esta clase representa un Alimento y las propiedades de este (nombre,cantidad,proteinas,carbohidratos,lipidos,…) …\n"],["Dieta","","Dieta.html","",""],["Gema","","Gema.html","",""],["Gema::Error","","Gema/Error.html","",""],["ListaDobleEnlazada","","ListaDobleEnlazada.html","",""],["Object","","Object.html","",""],["Plato","","Plato.html","","<p>Esta clase describe una lista de instancias de la clase Alimento\n"],["Plato::CompareMode","","Plato/CompareMode.html","","<p>Enum útil para controlar el comportamiento del metodo &#39;&lt;=&gt;&#39; (necesario para el modulo &#39;Comparable&#39;). …\n"],["PlatoEficienciaEnergetica","","PlatoEficienciaEnergetica.html","",""],["<=>","Alimento","Alimento.html#method-i-3C-3D-3E","(other)","<p>Metodo que debe ser implementado para que la incorporación del modulo &#39;Comparable&#39; funcione correctamente …\n"],["<=>","Plato","Plato.html#method-i-3C-3D-3E","(other)",""],["alimentos","Dieta","Dieta.html#method-c-alimentos","()",""],["build","Alimento","Alimento.html#method-c-build","()","<p>Construye una nueva instancia de la clase Alimento con los atributos seteados previamente(setTerreno,setCantidad,…) …\n"],["calculoEmisiones","Dieta","Dieta.html#method-i-calculoEmisiones","(dias)",""],["cantidadNecesaria","Alimento","Alimento.html#method-i-cantidadNecesaria","(cal_nec, prot_nec)","<p>Devuelve la cantidad necesaria, en kg, que hay que ingerir del alimento para ingerir cal_nec kcal y  …\n"],["carbohidratos","Alimento","Alimento.html#method-i-carbohidratos","()","<p>Recupera la cantidad de carbohidratos,en g, del alimento (relativo a la cantidad del alimento).\n"],["constructHashFromFile","Alimento","Alimento.html#method-c-constructHashFromFile","(input)","<p>Construye un diccionario de instancias de la clase Alimentos, con key == nombre del alimento de acuerdo …\n"],["constructListFromFile","Alimento","Alimento.html#method-c-constructListFromFile","(input)","<p>Construye una lista de instancias de la clase Alimentos de acuerdo al contenido de un fichero. Los parametros …\n"],["copy","Alimento","Alimento.html#method-c-copy","(copy)","<p>Devuelve una instancia copia de la clase Alimento dado otra instancia de la clase Alimento pasado como …\n"],["each","ListaDobleEnlazada","ListaDobleEnlazada.html#method-i-each","()",""],["emisiones","Dieta","Dieta.html#method-i-emisiones","()",""],["extract_head","ListaDobleEnlazada","ListaDobleEnlazada.html#method-i-extract_head","()",""],["extract_tail","ListaDobleEnlazada","ListaDobleEnlazada.html#method-i-extract_tail","()",""],["extracted","ListaDobleEnlazada","ListaDobleEnlazada.html#method-i-extracted","(nodo)",""],["extracted","Plato","Plato.html#method-i-extracted","(nodo)","<p>Define el comportamiento de la clase Plato en el momento en el que un alimento es eliminado de su lista …\n"],["extracted","PlatoEficienciaEnergetica","PlatoEficienciaEnergetica.html#method-i-extracted","(value)",""],["gei","Alimento","Alimento.html#method-i-gei","()","<p>Recupera la cantidad de gases de efecto invernadero producidos, en KgCO2, en la producción del alimento …\n"],["huellaNutricional","Plato","Plato.html#method-i-huellaNutricional","()","<p>Devuelve la media de las huellasNutricionales de todos los alimentos del plato\n"],["insert","ListaDobleEnlazada","ListaDobleEnlazada.html#method-i-insert","(nodo)",""],["insertList","ListaDobleEnlazada","ListaDobleEnlazada.html#method-i-insertList","(*nodos)",""],["inserted","ListaDobleEnlazada","ListaDobleEnlazada.html#method-i-inserted","(nodo)",""],["inserted","Plato","Plato.html#method-i-inserted","(value)","<p>Define el comportamiento de la clase Plato en el momento en el que un nuevo alimento es insertado Sobreescribe …\n"],["inserted","PlatoEficienciaEnergetica","PlatoEficienciaEnergetica.html#method-i-inserted","(value)",""],["lipidos","Alimento","Alimento.html#method-i-lipidos","()","<p>Recupera la cantidad de lipidos,en g, del alimento (relativo a la cantidad del alimento).\n"],["new","Alimento","Alimento.html#method-c-new","(nombre,proteinas,carbohidratos,lipidos, gei,terreno)","<p>Constructor de instancias de la clase Alimento.\n\n<pre>@param [String] nombre.\n@param [Float] proteinas.\n@param ...</pre>\n"],["new","ListaDobleEnlazada","ListaDobleEnlazada.html#method-c-new","()",""],["new","Plato","Plato.html#method-c-new","(nombre)",""],["new","PlatoEficienciaEnergetica","PlatoEficienciaEnergetica.html#method-c-new","(nombre)",""],["proteinas","Alimento","Alimento.html#method-i-proteinas","()","<p>Recupera la cantidad de proteinas, en g, del alimento (relativo a la cantidad del alimento).\n"],["setCantidad","Alimento","Alimento.html#method-c-setCantidad","(cantidad)","<p>Define el parametro &#39;peso&#39;(en kg) de la clase Alimento que el Constructor seteará.\n\n<pre class=\"ruby\"><span class=\"ruby-ivar\">@param</span> [<span class=\"ruby-constant\">Float</span>] <span class=\"ruby-operator\">...</span>\n</pre>\n"],["setCantidad","Alimento","Alimento.html#method-i-setCantidad","(cantidad)","<p>Define la cantidad, en kg, del alimento.\n\n<pre>@param [Float] cantidad  .</pre>\n"],["setCarbohidratos","Alimento","Alimento.html#method-c-setCarbohidratos","(carbohidratos)","<p>Define el parametro &#39;carbohidratos&#39;(en g) de la clase Alimento que el Constructor seteará.\n\n<pre class=\"ruby\"><span class=\"ruby-ivar\">@param</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["setCompareMode","Plato","Plato.html#method-c-setCompareMode","(mode)","<p>Define el modo de la comparación entre 2 instancias de la clase Plato\n\n<pre class=\"ruby\"><span class=\"ruby-ivar\">@param</span> [<span class=\"ruby-constant\">Integer</span>(<span class=\"ruby-constant\">Enum</span> <span class=\"ruby-constant\">CompareMode</span>)] <span class=\"ruby-operator\">...</span>\n</pre>\n"],["setGEI","Alimento","Alimento.html#method-c-setGEI","(gei)","<p>Define el parametro &#39;gei&#39;(gases de efecto invernadero) de la clase Alimento que el Constructor …\n"],["setLipidos","Alimento","Alimento.html#method-c-setLipidos","(lipidos)","<p>Define el parametro &#39;lipidos&#39;(en g) de la clase Alimento que el Constructor seteará.\n\n<pre class=\"ruby\"><span class=\"ruby-ivar\">@param</span> [<span class=\"ruby-constant\">Lipidos</span>] <span class=\"ruby-operator\">...</span>\n</pre>\n"],["setNombre","Alimento","Alimento.html#method-c-setNombre","(nombre)","<p>Define el parametro &#39;nombre&#39; de la clase Alimento que el Constructor seteará.\n\n<pre class=\"ruby\"><span class=\"ruby-ivar\">@param</span> [<span class=\"ruby-constant\">Nombre</span>] <span class=\"ruby-operator\">...</span>\n</pre>\n"],["setProteinas","Alimento","Alimento.html#method-c-setProteinas","(proteinas)","<p>Define el parametro &#39;proteinas&#39;(en g) de la clase Alimento que el constructor seteará.\n\n<pre class=\"ruby\"><span class=\"ruby-ivar\">@param</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["setTerreno","Alimento","Alimento.html#method-c-setTerreno","(terreno)","<p>Define el parametro &#39;terreno&#39;(en m^2 necesarios para producir el alimento) de la clase Alimento …\n"],["terreno","Alimento","Alimento.html#method-i-terreno","()","<p>Recupera la cantidad de m^2 de terreno necesario para producir el alimento (relativo a la cantidad del …\n"],["terreno","Dieta","Dieta.html#method-i-terreno","()",""],["to_s","Alimento","Alimento.html#method-i-to_s","()","<p>Devuelve un string que es el alimento formateado para ser entendible por un humano.\n"],["to_s","ListaDobleEnlazada","ListaDobleEnlazada.html#method-i-to_s","()",""],["to_s","Plato","Plato.html#method-i-to_s","()",""],["to_s","PlatoEficienciaEnergetica","PlatoEficienciaEnergetica.html#method-i-to_s","()",""],["valorEnergetico","Alimento","Alimento.html#method-i-valorEnergetico","()","<p>Recupera el valor Energetico, en kcal, que produce la ingesta del alimento (relativo a la cantidad del …\n"],["Changelog","","Changelog_md.html","","<p>commit cc3846de10271b57f58b881e233657d490a28444\nAuthor: Javier Duque Melguizo alu0101160337@ull.edu.es ...\n"],["Gemfile","","Gemfile.html","","<p>source “rubygems.org”\n<p># Specify your gem&#39;s dependencies in prct06-TDD.gemspec gemspec\n"],["Gemfile.lock","","Gemfile_lock.html","","<p>PATH\n\n<pre>remote: .\nspecs:\n  prct06-TDD (0.1.0)</pre>\n<p>GEM\n"],["Guardfile","","Guardfile.html","","<p># A sample Guardfile # More info at github.com/guard/guard#readme\n<p>## Uncomment and set this to only include …\n"],["README","","README_md.html","","<p>Prct06::TDD\n<p>Welcome to your new gem! In this directory, you&#39;ll find the files you need to be able …\n"],["Rakefile","","Rakefile.html","","<p>require “bundler/gem_tasks” require “rspec/core/rake_task”\n<p>RSpec::Core::RakeTask.new …\n"],["setup","","bin/setup.html","","<p>#!/usr/bin/env bash set -euo pipefail IFS=$&#39;nt&#39; set -vx\n<p>bundle install\n<p># Do any other automated …\n"],["prct06-TDD.gemspec","","prct06-TDD_gemspec.html","","<p>lib = File.expand_path(“lib”, __dir__) $LOAD_PATH.unshift(lib) unless $LOAD_PATH.include?(lib) …\n"]]}}